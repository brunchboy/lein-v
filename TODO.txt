1. Use jgit instead of shelling out to git executable (http://download.eclipse.org/jgit/site/3.6.2.201501210735-r/apidocs/index.html)
1. Document (& enforce) hybrid semver/maven version number schema
1. Support `lein release` task with repo-driven versioning
* The project.clj configuration should look something like this:
```
:release-tasks [["vcs" "assert-committed"]
                ["v" "update-version"] ;; compute new version & tag it
                ["vcs" "push"] ; Also pushes tag -which is the goal here
                ["deploy"]]
```

* The `["vcs" "assert-committed"]` task is supported natively by leiningen on git.
	* The `["v" "assert-pushed"]` task is almost complete in lein-v already -it needs to be extracted into its own fn.
	* The `["v" ""]`
	* The `["v" "new-semver-component-provided"]` task needs to be written.  It ensures that releases can only happen once per version, excepting SNAPSHOTs.
	* The `["v" "update-version"]` task is similar to the leiningen.change fn except it does not aggressively apply SNAPSHOT after ever release.
	* The `["v" "tag"]` task is just like the `["vcs" "tag"]` function, except that it does not create the tag if the 'closest' tag is same as the current version (requires a before-and-after snapshot of version)
	* The `["v" "push"]` task is just like the `["vcs" "push"]` fn's pushing of tags -except it doesn't push when not required (why not just use the built-in `["vcs" "push"]` ?).

* (http://download.eclipse.org/aether/aether-core/1.0.1/apidocs/org/eclipse/aether/util/version/GenericVersionScheme.html)
* (http://git.eclipse.org/c/aether/aether-core.git/tree/aether-util/src/main/java/org/eclipse/aether/util/version/GenericVersion.java)
* (http://semver.org/)
* (http://books.sonatype.com/mvnref-book/reference/pom-relationships-sect-pom-syntax.html#pom-reationships-sect-versions)
* (http://mojo.codehaus.org/versions-maven-plugin/version-rules.html)
* (http://maven.40175.n5.nabble.com/How-to-use-alternative-version-numbering-scheme-td123806.html)
* (http://maven.apache.org/ref/3.2.5/maven-artifact/index.html) JACKPOT!
* (http://maven.apache.org/ref/3.2.5/maven-artifact/apidocs/org/apache/maven/artifact/versioning/ComparableVersion.html) DOUBLE JACKPOT
* (https://cwiki.apache.org/confluence/display/MAVENOLD/Versioning)
* (http://docs.codehaus.org/display/MAVEN/Dependency+Mediation+and+Conflict+Resolution)
* (http://dev.clojure.org/display/doc/Maven+Settings+and+Repositories)
* (http://maven.40175.n5.nabble.com/How-to-use-SNAPSHOT-feature-together-with-BETA-qualifier-td73263.html)

Guiding Principle: the version of an artifact can be completely determined by repository metadata.

The versioning used by lein-v is compliant with leiningen versioning (aether's [GenericVersionScheme](http://download.eclipse.org/aether/aether-core/1.0.1/apidocs/org/eclipse/aether/util/version/GenericVersionScheme.html)) but further restricted to address the following objectives:

* Adhere to [Semantic Versioning](http://semver.org/) as closely as possible.  Specifically, always use three numeric segments for the version number.
* Support automatic generation of build number (post-release) sequenced releases from repo metadata without requiring an identifying tag.
* Tolerate SNAPSHOT qualifiers
* Infer a default version when no repo information is available (0.0.1-SNAPSHOT)

Examples:
""       +7          (0.0.7)            & ":major" => "v1.0.0"   (1.0.0)
"v1.0.0" +3          (1.0.0-3)          & ":minor" => "v1.1.0"   (1.1.0)
"v1.1.0" +2          (1.1.0-2)          & ":patch" => "v1.1.1"   (1.1.1)
"v1.1.1" +4          (1.1.1-4)          & ""       => ""   (1.1.1-4+abcd)
"v1.1.1" +8          (1.1.1-8)          & ":minor" => "v1.2.0"   (1.2.0)
"v1.2.0" +4          (1.2.0-4)          & ":minor rc" => "v1.3.0-rc" (1.3.0-rc-0)
"v1.3.0-rc" +4       (1.3.0-rc.4)       & "" => "v1.3.0-rc.4" (1.3.0-rc.4+3456)
"v1.3.0-rc.4" +2     (1.3.0-rc.6)       & ":release" => "v1.3.0" (1.3.0)
"v1.3.0" +4          (1.3.4)            & ":major :snapshot" => "v2.0.0-SNAPSHOT" (2.0.0-SNAPSHOT)
"v2.0.0-SNAPSHOT" +3 (2.0.0-SNAPSHOT)   & ":snapshot" => "" (2.0.0-SNAPSHOT)
"v2.0.0-SNAPSHOT" +3 (2.0.0-SNAPSHOT)   & ":release" => "v2.0.0" (2.0.0)

  > semver #"(\d+)\.(\d+)\.(\d+)((?:-)([\w\.\-]+))?((?:\+)([\w\.\-]+))?" ; major.minor.patch[-prerelease]\[+metadata]
  > leiningen-release #"(\d+)\.(\d+)\.(\d+)(?:-(.+))?" ; major.minor.patch[-qualifier] where qualifier => sublevel[n] | SNAPSHOT, where sublevel => alpha | beta | RC
  > maven2 #"((\d+)(?:\.(\d+))?(?:\.(\d+))?(?:-(.*))|.+)" ; MajorVersion [ . MinorVersion [ . IncrementalVersion ] ] [ - BuildNumber | Qualifier ]
  > lein-v-re :TBD ;;   ;; major.minor.patch[-Qualifier][-Build+Metadata]]
