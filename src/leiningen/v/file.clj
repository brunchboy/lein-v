(ns leiningen.v.file
  (:use [clojure.string :only [join]]))

(defn- cache-source
  "Return Clojure source code for the version cache file"
  [version describe]
  (join "\n" [";; This code was automatically generated by the 'lein-v' plugin"
              "(ns version)"
              (format "(def version \"%s\")" version)
              (format "(def raw-version \"%s\")" describe)
              ""]))

(defn- cache-path
  "Return path to version cache file"
  [{:keys [sources-path root]}]
  (str root "/" (or (first sources-path) "src") "/version.clj"))

(defn version
  "Peek into the source of the project to read the cached version"
  [project]
  (try
    (require 'version)
    (eval 'version/version)
    (catch Exception e nil)))

(defn cache
  "Write the version of the given Leiningen project to a file-backed cache"
  [{{describe :describe} :workspace version :version :as project}]
  (let [path (cache-path project)]
    (spit path (cache-source version describe))))
